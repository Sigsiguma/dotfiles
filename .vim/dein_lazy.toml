[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#enable_ignore_case = 1
let g:deoplete#enable_smart_case = 1
let g:deoplete#omni_patterns = {}
let g:deoplete#omni_patterns.ruby =
\ ['[^. *\t]\.\w*', '\h\w*::']  
inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
let g:deoplete#sources#omni#input_patterns = {
        \   "ruby" : '[^. *\t]\.\w*\|\h\w*::',
        \}
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ deoplete#manual_complete()
function! s:check_back_space() abort "{{{
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction"}}}
" <S-TAB>: completion back.
inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
" <BS>: close popup and delete backword char.
inoremap <expr><BS> deoplete#smart_close_popup()."\<C-h>"
'''

[[plugins]]
repo = 'Shougo/neosnippet'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'zchee/deoplete-go'
on_i = 1

[[plugins]]
repo = 'benekastah/neomake'
on_i = 1

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = ['rb', 'ruby']
on_i = 1

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'json']

[[plugins]]
repo = 'mtscout6/syntastic-local-eslint.vim'
on_ft = ['javascript', 'js']

[[plugins]]
repo = 'marijnh/tern_for_vim'
on_ft = ['javascript', 'js']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'vim-jp/vim-cpp'
on_ft = ['cpp']

[[plugins]]
repo = 'Mizuchi/STL-Syntax'
on_ft = ['cpp']

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html','css','php','js']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['js']

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['js']

[[plugins]]
repo = 'STRML/JSXHint'
on_ft = ['js']

[[plugins]]
repo = 'OmniSharp/omnisharp-vim'
on_ft = ['cs','csi','csx']

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['pu','uml','plantuml','md']

[[plugins]]
repo = 'weirongxu/plantuml-previewer.vim'
on_ft = ['pu','uml','plantuml','md']
